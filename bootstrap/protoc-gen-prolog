#!/usr/bin/env swipl
% -*- mode: prolog -*-

:- initialization(main, main).

:- use_module(library(protobufs)).

main(Argv) :-
    with_output_to(string(Result), main2(Argv, FileName)),
    Error = [], % or: Error = ['This is the error message']
    Response = protobuf([ % message CodeGeneratorResponse
                          repeated( 1, string(Error)), % optional string error = 1
                          embedded(15, File)           % repeated File = 15
                        ]
                        ),
    File = protobuf([ % message File
                      string( 1, Name),   % optional string name = 1
                      string(15, Content) % optional string content = 15
                    ]),
    atom_concat(FilePart, ".proto", FileName),
    atom_concat(FilePart, "_pb.pl", Name),
    Content = Result,
    protobuf_message(Response, ResponseWireStream),
    set_stream(user_output, encoding(octet)),
    set_stream(user_output, type(binary)),
    format(user_output, '~s', [ResponseWireStream]),
    halt.

main2(Argv, FileName) :-
    format('% ARGV: ~q~n', [Argv]),
    set_stream(user_input, encoding(octet)),
    set_stream(user_input, type(binary)),
    read_stream_to_codes(user_input, RequestWireStream),
    format('% RequestWireStream: ~q~n', [RequestWireStream]),
    protobuf_segment_message(Request, RequestWireStream),
    Request = [string(1, FileName)|_], % TODO: this is a repeating group
    format('% Request: ~q~n', [Request]).

% TODO: update this documentation:
% The following was generated by running parse_descriptor_proto_dump.pl
% and extracting the contents. See also descriptor_proto.pl

:- use_module(protoc_gen_prolog_pb/plugin_pb).
:- use_module(protoc_gen_prolog_pb/descriptor_pb).

end_of_file.
